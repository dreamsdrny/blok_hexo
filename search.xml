<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基础篇】搭建hexo博客（一）</title>
      <link href="/2023/01/28/post-%E5%9F%BA%E7%A1%80%E7%AF%87%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/01/28/post-%E5%9F%BA%E7%A1%80%E7%AF%87%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>*<strong>1*</strong>|***0***<strong>【基础篇】搭建hexo博客（一）</strong></p><p>作者：dreamsdrny</p><p>*<strong>2*</strong>|***0***<strong>前言</strong></p><p>你是否想拥有属于自己的博客？你是否无奈与自己不会写网站而烦恼？</p><p>不要担心，本系列教程将会实现你白嫖的愿望，连服务器都不需要买，就算没有任何编程基础也可以学会的搭建博客教程</p><p>下面来看看这些好看的个人博客：</p><p><a href="http://fech.in/">http://fech.in/</a></p><p><a href="https://xaoxuu.com/">https://xaoxuu.com/</a></p><p><a href="https://nexmoe.com/">https://nexmoe.com/</a></p><p><a href="https://sakura.hojun.cn/">https://sakura.hojun.cn/</a></p><p>以上的博客你是否都心动了呢？我想说的是，它们都是由hexo搭建的，等你学完了基础和进阶篇，上面展示的博客你都可以实现，就让我们一步步来吧！</p><p>这是一个系列教程，有基础篇和进阶篇，让我们看看这两个教程实现的效果</p><ul><li>【基础篇】</li></ul><ol><li>学会安装相应需要的依赖软件</li><li>学会更换主题</li><li>学会基本的站点配置</li><li>知道怎么生成文章并编辑</li><li>上传你的博客并拥有一个可以访问的地址</li></ol><hr><ul><li>进阶篇</li></ul><ol><li>学会用markdown基本语法编写你的文章</li><li>学会如何搭建一个免费的图床并使用</li><li>学会进一步配置主题并了解所有主题的基本功能</li><li>拥有自己的域名并绑定</li><li>使用一些插件让自己博客更完美</li><li>备份</li></ol><hr><p>*<strong>3*</strong>|***0***<strong>搭建之前的准备</strong><br>*<strong>3*</strong>|***1***<strong>安装nodejs</strong></p><blockquote><p>下载地址： <a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a></p></blockquote><p>选择windows安装包.msi安装</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/gtd/Snipaste_2020-02-29_08-54-53.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/gtd/Snipaste_2020-02-29_08-54-53.png" alt="img"></a></p><p>运行安装包，我们默认选择c盘</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/gtd/Snipaste_2020-02-29_08-49-21.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/gtd/Snipaste_2020-02-29_08-49-21.png" alt="img"></a></p><p>在这里选择Add to PATH然后点Next继续就行了</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/gtd/Snipaste_2020-02-29_08-49-39.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/gtd/Snipaste_2020-02-29_08-49-39.png" alt="img"></a></p><hr><p>*<strong>3*</strong>|***2***<strong>安装Git</strong></p><blockquote><p>下载地址：<a href="https://git-scm.com/">https://git-scm.com/</a></p></blockquote><p>点这里即可下载最新版本，如果你的下载速度比较慢可以选择下面的链接下载</p><blockquote><p><a href="https://www.lanzous.com/i9s7tib">https://www.lanzous.com/i9s7tib</a></p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/gtd/Snipaste_2020-02-29_08-57-32.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/gtd/Snipaste_2020-02-29_08-57-32.png" alt="img"></a></p><p>运行安装包，选择合适的安装位置，然后点Next</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/gtd/Snipaste_2020-02-29_09-01-49.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/gtd/Snipaste_2020-02-29_09-01-49.png" alt="img"></a></p><p>后面的安装步骤全部只要点Next就行了，不需要我们多余配置</p><p><a href="https://i.loli.net/2020/02/29/jqTCDk6YSbwQOVz.png"><img src="https://i.loli.net/2020/02/29/jqTCDk6YSbwQOVz.png" alt="Snipaste_2020-02-29_09-02-25.png"></a></p><hr><p>*<strong>3*</strong>|***3***<strong>验证nodejs是否安装配置成功</strong></p><p>我们安装完Git后，在桌面右键会有Git Bash Here，我们直接点开</p><p><a href="https://i.loli.net/2020/02/29/s1YhxtEILOlk4Xz.png"><img src="https://i.loli.net/2020/02/29/s1YhxtEILOlk4Xz.png" alt="Snipaste_2020-02-29_09-05-54.png"></a></p><p>会出来一个终端，我们分别执行下面的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure><p>如果输出了版本号，那么证明配置成功，如果没有版本号，请重新安装nodejs（检查是否勾选Add to Path），或者手动为nodejs添加环境变量</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/213.ophl1x6e4sp.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/213.ophl1x6e4sp.png" alt="image"></a></p><hr><p>*<strong>3*</strong>|***4***<strong>安装cnpm</strong></p><p>在git bash里面执行下面的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p><strong>检查cnpm是否安装成功</strong></p><p>执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm -v </span><br></pre></td></tr></table></figure><p>如果输出版本号就是安装成功了</p><hr><p>*<strong>4*</strong>|***0***<strong>安装hexo和初始化博客</strong><br>*<strong>4*</strong>|***1***<strong>安装hexo</strong></p><p>在git bash执行下面的命令安装hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>*<strong>4*</strong>|***2***<strong>初始化博客</strong></p><p>选择一个文件夹，然后右键打开git bash</p><p>例如：我在F盘新建了一个blog文件夹，就在blog文件夹下打开git bash</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-23-38.xgw9p9u10qr.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-23-38.xgw9p9u10qr.png" alt="image"></a></p><p>然后这里会显示你当前目录</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-25-37.w75xfc7uqwj.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-25-37.w75xfc7uqwj.png" alt="image"></a></p><p>然后执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>到<code>Install dependencies</code>的时候你可能会卡住，这是大多数人基本都会遇到的</p><p>我们只需要在这里的时候结束命令，按<code>Ctrl + c</code>就可以结束命令</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-27-37.79mebxnx3oa.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-27-37.79mebxnx3oa.png" alt="image"></a></p><p>然后执行下面这个命令，就可以使用国内的镜像为你完成博客的初始化工作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install</span><br></pre></td></tr></table></figure><blockquote><p>其他方法：</p><p>git clone <a href="https://e.coding.net/huanhao/hexoblog.git">https://e.coding.net/huanhao/hexoblog.git</a></p><p>cnpm install</p></blockquote><p>然后继续下面的步骤</p><p>等待命令完成后，就完成了初始化，现在就可以预览我们的博客了</p><p>执行下面这个命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：请不要结束命令或者关闭终端</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-31-47.jmi628mj35e.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-31-47.jmi628mj35e.png" alt="image"></a></p><p>然后会出来一段http开头的网址，我们复制下来然后在浏览器打开</p><p>就会出现这么一个页面了</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-33-55.tyszma65r9.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-33-55.tyszma65r9.png" alt="image"></a></p><hr><p>*<strong>5*</strong>|***0***<strong>更换主题</strong></p><p>你是否觉得上面的默认主题有点不好看呢？现在教你如何替换主题</p><p>hexo的所有主题都在下面这个地址：</p><blockquote><p><a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p></blockquote><p>你可能会在这个地址看到很多好看的主题，但是我们要慢慢来，有些主题的配置难度还是很高的</p><p>我们要找一个功能齐全，配置简单的主题练练手</p><p>就是这个新手入门hexo必备的Next主题</p><blockquote><p>预览效果：<a href="https://theme-next.org/">https://theme-next.org/</a></p><p>项目地址：<a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a></p><p>配置文档：<a href="https://theme-next.org/docs/getting-started/">https://theme-next.org/docs/getting-started/</a></p></blockquote><p>如你所见，其实每个主题都会包含这个三个东西</p><ul><li>预览效果</li><li>项目地址</li><li>配置文档</li></ul><p>点击主题的图片可以打开预览地址，点击主题的标题可以打开项目地址</p><p>配置文档我们需要自己去项目地址找，大多数主题的项目地址都是英文，大家可以开翻译找一下</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-40-40.h10pzhd3ikj.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-40-40.h10pzhd3ikj.png" alt="image"></a></p><hr><p>*<strong>5*</strong>|***1***<strong>如何下载主题</strong></p><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><p>打开主题的项目地址后，点击<code>Clone or download</code></p><p>然后复制https开头的地址</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-46-02.gnmyl5b7s2.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-46-02.gnmyl5b7s2.png" alt="image"></a></p><p>然后在你的博客文件夹下面打开git bash</p><p>执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 复制的地址 themes/主题名字</span><br></pre></td></tr></table></figure><p>如图：</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-50-23.o7ukcdqwa8e.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-50-23.o7ukcdqwa8e.png" alt="image"></a></p><p>现在给你解释一下这个命令</p><p>git clone 代表克隆，后面接上一串下载地址，最后面的themes&#x2F;next是把文件夹下载到主题目录下，并把主题文件命名为next</p><hr><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><p>如果你觉得比较麻烦，还有第二个办法</p><p>打开主题项目地址，然后点击<code>Clone or download</code>，然后点击Download ZIP</p><p>这样可以下载主题文件压缩包，前提是你已经登入了github（没有账号的，请自己注册一下）</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-53-14.hd54gibpilh.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-53-14.hd54gibpilh.png" alt="image"></a></p><p>然后解压压缩包，把文件夹放在博客目录下的themes目录，并把文件夹命名为主题的名字</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-56-33.xhx8o5z5d9.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_09-56-33.xhx8o5z5d9.png" alt="image"></a></p><hr><p>*<strong>5*</strong>|***2***<strong>修改配置文件</strong></p><p>在博客的目录下有一个叫<code>_config.yml</code>的文件</p><p>将它打开</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-01-51.gwst228nama.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-01-51.gwst228nama.png" alt="image"></a></p><p>找到<code>themes</code>这一行，然后将主题名字修改为next</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-02-23.58o49hkjdki.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-02-23.58o49hkjdki.png" alt="image"></a></p><p>这样的话，主题就成功更换了</p><hr><p>*<strong>5*</strong>|***3***<strong>预览主题</strong></p><p>在博客目录打开git bash</p><p>执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>还是会出现一段浏览地址，我们在浏览器打开就行了</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-04-16.2dvd68y21dm.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-04-16.2dvd68y21dm.png" alt="image"></a></p><blockquote><p>注意：有些主题你更换之后是暂时无法预览的，因为有的主题还需要安装它需要的依赖，这一般都会在主题的文档里面提到，只有安装它的依赖之后才可以正常预览，这里暂时不做说明，会在hexo教程进阶篇说到</p></blockquote><hr><p>*<strong>6*</strong>|***0***<strong>配置主题</strong></p><p>这里不会做详细的配置介绍，在进阶篇会完整说明</p><p>我们需要认识两个文件</p><ul><li>站点配置文件</li></ul><p>指的是博客根目录下的<code>_config.yml</code></p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-01-51.gwst228nama.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-01-51.gwst228nama.png" alt="image"></a></p><ul><li>主题配置文件</li></ul><p>指的是某个主题下的<code>_config.yml</code></p><p>它们的名字都叫<code>_config.yml</code>但是你不能弄混淆</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-11-13.qayjeoclrer.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-11-13.qayjeoclrer.png" alt="image"></a></p><p>在我们看主题文档配置的时候，是必须要分清这两个概念的，不然会报错</p><p>我们先来几个基本的配置</p><p>*<strong>6*</strong>|***1***<strong>设置语言</strong></p><p>在Next主题的文档里面提到了如何更换语言</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-45-34.i8xhol7d05.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-45-34.i8xhol7d05.png" alt="image"></a></p><p>它要求我们更改的是站点配置文件，并且给出了代码示范</p><p>我们打开站点配置文件</p><p>按照要求，将language的配置改成zh-CN，然后保存文件</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-46-29.tuonuuuk6mm.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-46-29.tuonuuuk6mm.png" alt="image"></a></p><p>*<strong>6*</strong>|***2***<strong>其他设置</strong></p><p>现在再来尝试一个</p><p>Next主题里面有个Scheme选项，可以更改主题的外观</p><p>根据要求，我们需要更改的是主题配置文件</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-47-13.9mpo8qnzty.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-47-13.9mpo8qnzty.png" alt="image"></a></p><p>打开主题配置文件，我们尝试scheme改成双栏，也就是需要修改成Pisces</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-22-06.eq6mi8hrlka.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-22-06.eq6mi8hrlka.png" alt="image"></a></p><p>现在已经修改过两个配置了，为了检验是否修改成功，我们需要预览一下主题</p><p>在博客根目录下执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>然后打开链接</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-49-17.j0ojrtmb8xm.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-49-17.j0ojrtmb8xm.png" alt="image"></a></p><p>可以看到都设置成功了</p><p>因为这个主题的主题文档是英文的，所以可能配置起来不太方便，我这里有一个中文的</p><p>是别人翻译的，不过现在不是最新版本的翻译</p><blockquote><p><a href="http://theme-next.iissnan.com/">http://theme-next.iissnan.com/</a></p></blockquote><p>如果你有能力，可以自己挑一个主题进行简单配置，在进阶篇中会使用其他主题为你展示更详细的配置教程</p><hr><p>*<strong>7*</strong>|***0***<strong>生成文章的编辑工具</strong></p><p>在博客根目录下面执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;文章链接&quot;</span><br></pre></td></tr></table></figure><p>例如：你想创建一个名为”我的第一个博客“的文章</p><p>可以执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;my-first-blog&quot;</span><br></pre></td></tr></table></figure><p>文章链接建议是英文，然后会显示你的文章生成的目录，每次生成的文章都固定在你的博客根目录下面的source&#x2F;_posts下</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-10-30.ybyovivc8lp.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-10-30.ybyovivc8lp.png" alt="image"></a></p><p>可以看到是一个后缀为.md的文件，这个其实是一个markdown文件，如果你不知道markdown是什么，在进阶篇会告诉你，就算你不会markdown，你可以暂时把这个当成txt文件</p><p>我建议你安装Typora编辑.md文件</p><blockquote><p><a href="https://www.typora.io/">https://www.typora.io/</a></p></blockquote><p>按照目录打开my-firsy-blog.md文件，可以看到一个横线上面有一段信息</p><p>这里面是存放你博客信息的地方</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-16-37.oun3i88bw.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-16-37.oun3i88bw.png" alt="image"></a></p><ul><li>title 文章标题</li><li>date 文章日期</li><li>tag 文章标签 （暂时不说明如何配置，进阶篇会讲到）</li></ul><p>然后这时候你可以修改文章标题，并且在横线下面输入你文章的内容</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-17-14.7x7sfa9t9m8.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-17-14.7x7sfa9t9m8.png" alt="image"></a></p><p>保存之后，你可以在博客根目录打开git bash</p><p>执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>记得：预览博客都是这个命令</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-22-11.eoh9owyqu4j.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-22-11.eoh9owyqu4j.png" alt="image"></a></p><hr><p>*<strong>8*</strong>|***0***<strong>部署你的博客</strong></p><p>现在我们的博客都是只能本地预览，如何将我们的上传到一个地方，然后通过域名访问呢？</p><p>你可能觉得需要一个服务器再买个域名绑定，我可以告诉你都不需要</p><p>下面介绍两种部署方法</p><p>先来个对比</p><p><strong>github：</strong></p><ul><li>国外网站，是英文</li><li>访问速度较慢</li><li>不需要实名认证</li><li>域名形式可以自定义</li></ul><p><strong>coding：</strong></p><ul><li>国内的平台，网站是中文</li><li>访问速度快</li><li>部署网站需要实名认证，只需要填写身份证号即可</li><li>域名是随机给的，所以很长而且不能自定义</li></ul><p>如果你有自己的域名，github和coding都可以绑定域名</p><p>*<strong>8*</strong>|***1***<strong>coding</strong></p><blockquote><p><a href="https://coding.net/user">https://coding.net/user</a></p></blockquote><p>注册一个coding的账号，这里不做演示</p><p>然后按照图片新建一个项目</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-25-47.8py42ifi1g3.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-25-47.8py42ifi1g3.png" alt="image"></a></p><p>选择devops</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-25-58.sm3tn54wui.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-25-58.sm3tn54wui.png" alt="image"></a></p><p>填入相关信息，记得勾选**<code>启用README.cd文件初始化项目</code>**</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-26-29.u2pyq6c928.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-26-29.u2pyq6c928.png" alt="image"></a></p><p>然后完成创建</p><hr><blockquote><p>我们暂时不能直接上传，需要进行一些配置，如下：</p></blockquote><p>接下来需要我们创建一个git秘钥</p><p>打开git bash（不要求在哪个目录）</p><p>执行： “这里面是你的邮箱”</p><p>不管出现什么信息，你只需要回车就可以了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C “your_email@youremail.com“</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>会输出你的秘钥，我们复制输出信息就行了</p><p>然后点击头像，打开个人设置–选择SSH公钥–新增公钥</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-33-54.hlvuud9w9ns.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-33-54.hlvuud9w9ns.png" alt="image"></a></p><p>然后将你复制的秘钥粘贴进去，记得勾选永久有效</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-34-42.zd3za7e4a6e.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-34-42.zd3za7e4a6e.png" alt="image"></a></p><hr><p>然后打开git bash</p><p>执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  ssh -T git@git.coding.net</span><br></pre></td></tr></table></figure><p>会提示你下面这个，输入yes回车就行了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? </span><br></pre></td></tr></table></figure><hr><p>接下来打开你的项目选择SSH，然后复制右边git开头的地址</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-38-33.r8subsc5h7k.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-38-33.r8subsc5h7k.png" alt="image"></a></p><p>打开站点配置文件</p><p>修改deploy信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: 你复制的地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>例如：</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-44-14.it2uh45m4jq.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-44-14.it2uh45m4jq.png" alt="image"></a></p><p>在博客根目录下打开git bash</p><p>分别执行下面的命令：</p><p>yourname是你的名字</p><p>youremail是你的邮箱</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;yourname&quot;</span><br><span class="line">$ git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>然后安装上传插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><hr><h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><blockquote><p>以上的配置完成之后，就可以上传了</p></blockquote><p>在博客根目录下打开git bash，执行下面的命令就可以上传了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-49-05.lkmgvzcdzwh.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-49-05.lkmgvzcdzwh.png" alt="image"></a></p><p>然后打开项目，打开构建与部署–静态网站–立即发布静态网站</p><blockquote><p>注意：coding需要实名认证，只需要你输入身份证号就可以了，不用担心泄露隐私，因为coding现在是腾讯的</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-50-05.b57ma6w5win.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-50-05.b57ma6w5win.png" alt="image"></a></p><p>我们只要填写网站名称就行了，然后保存</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-50-36.6fwfau0xu0w.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-50-36.6fwfau0xu0w.png" alt="image"></a></p><p>因为是刚构建的网站，所以要手动部署一下，以后上传就不需要手动部署</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-55-02.ki4y7hiyo2b.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-55-02.ki4y7hiyo2b.png" alt="image"></a></p><p>然后访问所给的地址，那个就是我们网站的地址了</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-56-21.b5y903lp4hk.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-56-21.b5y903lp4hk.png" alt="image"></a></p><p>之后每次修改完博客要上传的时候，只需执行上传命令</p><p>*<strong>8*</strong>|***2***<strong>github部署</strong></p><p>你还可以使用github部署你的博客</p><p>这里不演示如何注册账号</p><p>创建一个仓库</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_14-49-41.bjily8bk23.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_14-49-41.bjily8bk23.png" alt="image"></a></p><p>仓库名必须是用户名 + .github.io</p><p>然后勾选初始化README</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_14-51-22.58hhw0be4f9.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_14-51-22.58hhw0be4f9.png" alt="image"></a></p><blockquote><p>我们暂时不能直接上传，需要进行一些配置，如下：</p></blockquote><p>接下来需要我们创建一个git秘钥</p><p>打开git bash（不要求在哪个目录）</p><p>执行： “这里面是你的邮箱”</p><p>不管出现什么信息，你只需要回车就可以了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C “your_email@youremail.com“</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>会输出你的秘钥，我们复制输出信息就行了</p><p>然后点击头像，点击Settings–SSH·····–New SSH Key</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_14-53-12.bnffwtcf66a.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_14-53-12.bnffwtcf66a.png" alt="image"></a></p><p>粘贴你复制的秘钥</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_14-55-05.lakxr64606k.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_14-55-05.lakxr64606k.png" alt="image"></a></p><p>然后打开git bash</p><p>执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>会提示你下面这个，输入yes回车就行了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? </span><br></pre></td></tr></table></figure><p>打开项目，点击绿色按钮，点击Use SSH</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_15-01-31.omf9nqgs46i.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_15-01-31.omf9nqgs46i.png" alt="image"></a></p><p>复制git开头的地址</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_15-01-38.kjtg51f14z.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_15-01-38.kjtg51f14z.png" alt="image"></a></p><p>打开站点配置文件</p><p>修改deploy信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: 你复制的地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>例如：</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_15-01-58.3dtw3iersue.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_15-01-58.3dtw3iersue.png" alt="image"></a></p><p>在博客根目录下打开git bash</p><p>分别执行下面的命令：</p><p>yourname是你的名字</p><p>youremail是你的邮箱</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;yourname&quot;</span><br><span class="line">$ git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>然后安装上传插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><hr><h3 id="上传-1"><a href="#上传-1" class="headerlink" title="上传"></a>上传</h3><blockquote><p>以上的配置完成之后，就可以上传了</p></blockquote><p>在博客根目录下打开git bash，执行下面的命令就可以上传了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-49-05.lkmgvzcdzwh.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_12-49-05.lkmgvzcdzwh.png" alt="image"></a></p><p>然后打开项目，点击Settings</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_15-07-19.prpi9gjzgvn.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_15-07-19.prpi9gjzgvn.png" alt="image"></a></p><p>往下滑找到Github pages</p><p>点击none 选择master branch</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_15-11-58.91hsb6n2sg.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_15-11-58.91hsb6n2sg.png" alt="image"></a></p><p>之后你会得到一个地址，这个就是你的网站地址了</p><p><a href="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_15-06-38.5i4rmc7ha2g.png"><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_15-06-38.5i4rmc7ha2g.png" alt="image"></a></p><p><strong>教程结束，进阶篇请期待</strong></p><p>我的同步更新博客: <a href="https://mrhuanhao.cn/">https://mrhuanhao.cn/</a></p><p><strong>EOF</strong></p><p><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/cdn/blog/huanhao.jpg" alt="img"></p><p><strong>本文作者</strong>：**<a href="https://www.cnblogs.com/huanhao/p/hexobase.html">HuanHao</a>**<br><strong>本文链接</strong>：<a href="https://www.cnblogs.com/huanhao/p/hexobase.html">https://www.cnblogs.com/huanhao/p/hexobase.html</a><br><strong>关于博主</strong>：评论和私信会在第一时间回复。或者<a href="https://msg.cnblogs.com/msg/send/huanhao">直接私信</a>我。<br><strong>版权声明</strong>：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-nd/4.0/">BY-NC-SA</a> 许可协议。转载请注明出处！<br><strong>声援博主</strong>：如果您觉得文章对您有帮助，可以点击文章右下角<strong>【<a href="javascript:void(0);">推荐</a>】</strong>一下。您的鼓励是博主的最大动力！</p><p>如果你喜欢我的文章，可以关注一下我的博客，或者关注我的bilibili：<a href="https://space.bilibili.com/67268239">https://space.bilibili.com/67268239</a></p><p>分类: <a href="https://www.cnblogs.com/huanhao/category/1651577.html">网站搭建</a></p><p>标签: <a href="https://www.cnblogs.com/huanhao/tag/%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/">免费博客搭建</a>, <a href="https://www.cnblogs.com/huanhao/tag/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/">博客搭建</a>, <a href="https://www.cnblogs.com/huanhao/tag/Hexo/">Hexo</a></p><p><a href="javascript:void(0);">好文要顶</a> <a href="javascript:void(0);">关注我</a> <a href="javascript:void(0);">收藏该文</a> <a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/icon_weibo_24.png" alt="img"></a> <a href="javascript:void(0);"><img src="https://common.cnblogs.com/images/wechat.png" alt="img"></a></p><p><a href="https://home.cnblogs.com/u/huanhao/"><img src="https://pic.cnblogs.com/face/sample_face.gif" alt="img"></a></p><p><a href="https://home.cnblogs.com/u/huanhao/">huanhao</a><br><a href="https://home.cnblogs.com/u/huanhao/followers/">粉丝 - 19</a> <a href="https://home.cnblogs.com/u/huanhao/followees/">关注 - 1</a></p><p><a href="javascript:void(0);">+加关注</a></p><p>9</p><p>0</p><p><a href="https://www.cnblogs.com/huanhao/p/newweb.html">« </a>上一篇： <a href="https://www.cnblogs.com/huanhao/p/newweb.html">新网址,之后将同步更新，博客园可能会更新较慢</a><br><a href="https://www.cnblogs.com/huanhao/p/prettykde.html">» </a>下一篇： <a href="https://www.cnblogs.com/huanhao/p/prettykde.html">【kde美化】ArchLinux</a></p><p>posted @ 2020-02-29 15:16 <a href="https://www.cnblogs.com/huanhao/">huanhao</a> 阅读(11350) 评论(5) <a href="https://i.cnblogs.com/EditPosts.aspx?postid=12383083">编辑</a> <a href="javascript:void(0)">收藏</a> <a href="javascript:void(0)">举报</a></p><p><a href="javascript:void(0);">刷新评论</a><a href="https://www.cnblogs.com/huanhao/p/hexobase.html#">刷新页面</a><a href="https://www.cnblogs.com/huanhao/p/hexobase.html#top">返回顶部</a></p><p>登录后才能查看或发表评论，立即 <a href="javascript:void(0);">登录</a> 或者 <a href="https://www.cnblogs.com/">逛逛</a> 博客园首页</p><p><a href="https://click.aliyun.com/m/1000365553/">【推荐】阿里云新人特惠，爆款云服务器2核4G低至0.46元&#x2F;天</a><br><a href="https://cloud.tencent.com/act/cps/redirect?redirect=3274&cps_key=6a15b90f1178f38fb09b07f16943cf3e&from=console">【推荐】腾讯云云产品年终特惠，轻量应用服务器6.58元&#x2F;月起</a></p><p><strong>编辑推荐：</strong><br>· <a href="https://www.cnblogs.com/huangxincheng/p/17069686.html">SQLSERVER 事务日志的 LSN 到底是什么？</a><br>· <a href="https://www.cnblogs.com/jiujuan/p/17066590.html">微服务架构学习与思考：从单体架构到微服务架构的演进历程</a><br>· <a href="https://www.cnblogs.com/wzh2010/p/15888525.html">MQ 系列11：如何保证消息可靠性传输</a><br>· <a href="https://www.cnblogs.com/makemylife/p/17063284.html">聊聊我与流式计算的故事</a><br>· <a href="https://www.cnblogs.com/tcjiaan/p/17065118.html">［ASP.NET Core］用配置文件来设置授权角色</a></p><p><strong>阅读排行：</strong><br>· <a href="https://www.cnblogs.com/smartloli/p/17069184.html">ChatGPT开发实战</a><br>· <a href="https://www.cnblogs.com/nezhaSoft/p/17068767.html">自从学习了MongoDB高可用，慢慢的喜欢上了它，之前确实冷落了</a><br>· <a href="https://www.cnblogs.com/nullnuo/p/17068843.html">windows11预览版装WSA心得</a><br>· <a href="https://www.cnblogs.com/xueweihan/p/17069622.html">《HelloGitHub》第 82 期</a><br>· <a href="https://www.cnblogs.com/whuanle/p/17069128.html">1.5万字长文：从 C# 入门 Kafka</a></p><p>MENU</p><h1 id="【基础篇】hexo博客搭建教程"><a href="#【基础篇】hexo博客搭建教程" class="headerlink" title="【基础篇】hexo博客搭建教程"></a>【基础篇】hexo博客搭建教程</h1><p>发表于 2020-02-29 15:16阅读次数：11350评论次数：5</p><p><a href="https://www.cnblogs.com/huanhao/category/1651577.html">网站搭建</a><a href="https://www.cnblogs.com/huanhao/tag/%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/">免费博客搭建</a><a href="https://www.cnblogs.com/huanhao/tag/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/">博客搭建</a><a href="https://www.cnblogs.com/huanhao/tag/Hexo/">HEXO</a></p><p>This blog has running : 1076 d 2 h 40 m 44 sღゝ◡╹)ノ♡</p><p>友情链接：<a href="https://msg.cnblogs.com/send/huanhao">申请坑位</a>&#x2F;<a href="https://msg.cnblogs.com/send/huanhao">申请坑位</a>&#x2F;<a href="https://msg.cnblogs.com/send/huanhao">申请坑位</a>&#x2F;<a href="https://msg.cnblogs.com/send/huanhao">申请坑位</a>&#x2F;<a href="https://msg.cnblogs.com/send/huanhao">申请坑位</a></p><p>Copyright © 2023 huanhao Powered by .NET 7.0 on Kubernetes</p><p>Theme version: <a href="https://github.com/BNDong/Cnblogs-Theme-SimpleMemory/tree/v1.2.6">v1.2.6</a> &#x2F; Loading theme version: <a href="https://github.com/BNDong/Cnblogs-Theme-SimpleMemory/tree/v1.2.6">v1.2.6</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机理论知识总结</title>
      <link href="/2023/01/25/post-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
      <url>/2023/01/25/post-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>这个仓库主要用来对计算机学科的基础理论知识和主流编程语言相关内容进行总结，每个目录对应一个大的方向。</p><p>腾讯内推可以发简历到 <a href="mailto:&#x78;&#x75;&#x65;&#x7a;&#x61;&#x69;&#x67;&#x64;&#x73;&#64;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#x6d;">&#x78;&#x75;&#x65;&#x7a;&#x61;&#x69;&#x67;&#x64;&#x73;&#64;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#x6d;</a> ，邮件标题：<strong>学校+手机号+岗位</strong>。我会对合适的简历，内推到相应部门，并及时反馈面试进度与结果。关于TX 面试的一些疑问，也可以发邮件到邮箱咨询。</p><h1 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h1><p>主要包含的计算机基础有以下几个大方向：</p><ul><li><a href="DataBase/">DataBase</a></li><li><a href="DataStructure/">DataStructure</a></li><li><a href="Linux_OS/">Linux_OS</a></li><li><a href="Network/">Network</a></li><li><a href="Algorithm/">Algorithm</a></li><li><a href="Math/">Math</a></li></ul><p>编程语言目前有：</p><ul><li><a href="Python/">Python</a></li><li><a href="C++/">C++</a></li></ul><p>此外，还有几个目录：</p><ul><li><a href="Coding/">Coding</a>：一些 C++ 的代码</li><li><a href="OnlineJudge/">OnlineJudge</a>：一些 OJ 的解题代码</li><li><a href="Offer/">Offer</a>：主要分享一些和找工作相关的内容</li><li><a href="Others/">Others</a>：一些无法归类，但是可能有用的东西</li></ul><p>最后，<a href="Questions.md">Questions</a> 文件列出了一些重要的知识点，可以用来自检，看看自己有没有遗漏一些重要知识点。</p><p>问题清单，用以自检！</p><h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><ul><li><input disabled="" type="checkbox"> 文件共享：软链接，硬链接</li><li><input disabled="" type="checkbox"> 系统调用与标准库函数的区别</li><li><input disabled="" type="checkbox"> 内核态、用户态</li><li><input disabled="" type="checkbox"> 系统如何将信号通知到进程</li></ul><h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><ul><li><input disabled="" type="checkbox"> <a href="Network/OSI_TCP_IP.md#osi-%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B">OSI 网络参考模型</a></li><li><input disabled="" type="checkbox"> <a href="Network/OSI_TCP_IP.md#tcpip-%E5%8D%8F%E8%AE%AE%E6%A0%88">TCP&#x2F;IP 协议栈</a></li><li><input disabled="" type="checkbox"> <a href="Network/TCP.md#%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%BB%BA%E7%AB%8B%E8%BF%9E%E6%8E%A5">TCP 三次握手建立连接</a></li><li><input disabled="" type="checkbox"> <a href="Network/TCP.md#%E5%9B%9B%E6%AC%A1%E6%8F%A1%E6%89%8B%E6%96%AD%E5%BC%80%E8%BF%9E%E6%8E%A5">TCP 四次握手断开连接</a></li><li><input disabled="" type="checkbox"> <a href="Network/TCP.md#tcp-%E9%87%8D%E4%BC%A0%E6%9C%BA%E5%88%B6">TCP 重传机制</a></li><li><input disabled="" type="checkbox"> <a href="Network/TCP.md#tcp-%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3">TCP 滑动窗口</a></li><li><input disabled="" type="checkbox"> <a href="Network/TCP.md#tcp-%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6">TCP 拥塞控制</a></li><li><input disabled="" type="checkbox"> <a href="Network/Socket.md">Socket 套接字编程</a></li><li><input disabled="" type="checkbox"> <a href="Network/HTTP.md#http%E5%8D%8F%E8%AE%AE%E4%B9%8Bget%E5%92%8Cpost">get post 区别</a></li><li><input disabled="" type="checkbox"> <a href="Network/Questions.md#qq-%E4%BC%A0%E8%BE%93%E5%B1%82udp">QQ 传输层UDP</a></li><li><input disabled="" type="checkbox"> <a href="Network/Questions.md#%E8%AE%BF%E9%97%AE%E7%BD%91%E9%A1%B5%E8%BF%87%E7%A8%8B">访问网页背后流程</a></li></ul><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><ul><li><input disabled="" type="checkbox"> <a href="DataBase/Concept.md#%E7%A0%81">超码，候选吗，主码</a></li><li><input disabled="" type="checkbox"> <a href="DataBase/Concept.md#%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0">关系代数运算，各种连接</a></li><li><input disabled="" type="checkbox"> <a href="DataBase/Design.md#%E4%B8%BB%E9%94%AE%E5%A4%96%E9%94%AE">主键、外键</a></li><li><input disabled="" type="checkbox"> <a href="DataBase/Design.md#%E5%8E%9F%E5%AD%90%E5%9F%9F%E5%92%8C%E7%AC%AC%E4%B8%80%E8%8C%83%E5%BC%8F">原子域和第一范式</a></li><li><input disabled="" type="checkbox"> <a href="DataBase/Design.md#%E7%AC%AC%E4%BA%8C%E8%8C%83%E5%BC%8F">第二范式</a></li><li><input disabled="" type="checkbox"> <a href="DataBase/Design.md#%E7%AC%AC%E4%B8%89%E8%8C%83%E5%BC%8F">第三范式</a></li><li><input disabled="" type="checkbox"> <a href="DataBase/Design.md#bcnf-%E8%8C%83%E5%BC%8F">BCNF 范式</a></li><li><input disabled="" type="checkbox"> <a href="DataBase/Design.md#%E8%8C%83%E5%BC%8F%E8%BF%98%E6%98%AF%E5%8F%8D%E8%8C%83%E5%BC%8F">一定要遵守范式吗</a></li><li><input disabled="" type="checkbox"> <a href="DataBase/SQL_Basic.md#sql-dml%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9">SQL DML：增删查改</a></li><li><input disabled="" type="checkbox"> <a href="DataBase/SQL_Basic.md#sql-%E5%AD%90%E5%8F%A5%E5%87%BD%E6%95%B0">SQL 子句、函数</a></li><li><input disabled="" type="checkbox"> <a href="DataBase/SQL_Basic.md#sql-ddl">SQL DDL：数据表操作</a></li><li><input disabled="" type="checkbox"> <a href="DataBase/SQL_More.md#%E4%BA%8B%E5%8A%A1">事物，隔离级别</a></li><li><input disabled="" type="checkbox"> <a href="DataBase/Engine.md">存储引擎介绍</a></li><li><input disabled="" type="checkbox"> <a href="DataBase/Index.md">索引原理，分类以及策略</a></li><li><input disabled="" type="checkbox"> <a href="DataBase/Mysql.md">Mysql 的简单使用</a></li></ul><h1 id="数据结构、算法"><a href="#数据结构、算法" class="headerlink" title="数据结构、算法"></a>数据结构、算法</h1><ul><li><input disabled="" type="checkbox"> <a href="Algorithm/Sort.md">经典排序算法</a></li><li><input disabled="" type="checkbox"> <a href="http://selfboot.cn/2016/09/01/lost_partition/">partition 算法</a></li><li><input disabled="" type="checkbox"> <a href="https://github.com/xuelangZF/LeetCode/tree/master/BinarySearch">二分查找算法</a></li><li><input disabled="" type="checkbox"> <a href="https://github.com/xuelangZF/LeetCode/tree/master/Recursion">递归，递归，递归！</a></li></ul><h1 id="C-x2F-C"><a href="#C-x2F-C" class="headerlink" title="C&#x2F;C++"></a>C&#x2F;C++</h1><ul><li><input disabled="" type="checkbox"> <a href="C++/Basic.md/#%E5%A3%B0%E6%98%8E%E8%BF%98%E6%98%AF%E5%AE%9A%E4%B9%89">声明还是定义</a></li><li><input disabled="" type="checkbox"> <a href="C++/Basic.md#%E5%B7%A6%E5%80%BC%E8%BF%98%E6%98%AF%E5%8F%B3%E5%80%BC">左值还是右值</a></li><li><input disabled="" type="checkbox"> <a href="C++/Basic.md#%E5%BC%95%E7%94%A8">引用的使用</a></li><li><input disabled="" type="checkbox"> <a href="C++/Keywords.md#const">const 五大类用法</a></li><li><input disabled="" type="checkbox"> <a href="C++/Keywords.md#static">static 五种用途</a></li><li><input disabled="" type="checkbox"> <a href="C++/Keywords.md#extern">extern 作用</a></li><li><input disabled="" type="checkbox"> <a href="C++/Keywords.md#extern-c">extern “C” 函数名修饰机制</a></li><li><input disabled="" type="checkbox"> <a href="C++/Keywords.md#volatile">volatile 稳定访问特殊地址</a></li><li><input disabled="" type="checkbox"> <a href="C++/Keywords.md#register">register 寄存器优化</a></li><li><input disabled="" type="checkbox"> <a href="C++/Keywords.md#final">final 禁止继承或者覆盖</a></li><li><input disabled="" type="checkbox"> <a href="C++/Keywords.md#inline">inline 内联函数</a></li><li><input disabled="" type="checkbox"> <a href="C++/Keywords.md#typedef">typedef 类型别名</a></li><li><input disabled="" type="checkbox"> <a href="C++/Keywords.md#explicit">explicit 避免隐式类型转换</a></li><li><input disabled="" type="checkbox"> <a href="C++/Class.md#%E8%B5%8B%E5%80%BC%E8%BF%98%E6%98%AF%E6%9E%84%E9%80%A0">赋值还是拷贝构造</a></li><li><input disabled="" type="checkbox"> <a href="C++/Class.md#%E7%A6%81%E6%AD%A2%E5%AF%B9%E8%B1%A1%E4%BA%A7%E7%94%9F%E5%9C%A8%E5%A0%86%E6%A0%88%E4%B8%AD">禁止对象产生在堆栈上</a></li><li><input disabled="" type="checkbox"> <a href="C++/Class.md#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%88%9D%E5%A7%8B%E5%80%BC%E5%88%97%E8%A1%A8">类内初始化</a></li><li><input disabled="" type="checkbox"> <a href="C++/Class.md#%E5%A4%9A%E6%80%81">虚函数实现机制</a></li><li><input disabled="" type="checkbox"> <a href="C++/Class.md#%E6%88%90%E5%91%98%E5%87%BD%E6%95%B0">函数重载、覆盖、隐藏区别</a></li><li><input disabled="" type="checkbox"> <a href="C++/README.md#%E6%95%B0%E7%BB%84%E5%BD%A2%E5%8F%82">数组作为形参</a></li><li><input disabled="" type="checkbox"> <a href="C++/Pointer.md#%E6%8C%87%E9%92%88%E4%B8%8E%E5%BC%95%E7%94%A8">指针与引用区别</a></li><li><input disabled="" type="checkbox"> <a href="C++/Pointer.md#%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88">函数指针</a></li><li><input disabled="" type="checkbox"> <a href="C++/Basic.md#%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90">内存对齐原则</a></li><li><input disabled="" type="checkbox"> <a href="C++/Basic.md#sizeof-%E8%BF%90%E7%AE%97%E7%AC%A6">sizeof 运算符</a></li><li><input disabled="" type="checkbox"> <a href="C++/Basic.md#%E8%81%94%E5%90%88%E4%BD%93cpu%E5%AD%97%E8%8A%82%E5%BA%8F">union 实现 CPU 字节序判定</a></li><li><input disabled="" type="checkbox"> <a href="Linux_OS/StackHeap.md">内存堆栈的区别</a></li><li><input disabled="" type="checkbox"> <a href="C++/Memory.md#%E5%B8%B8%E8%A7%81%E7%9A%84%E5%86%85%E5%AD%98%E9%94%99%E8%AF%AF">常见的内存错误</a></li><li><input disabled="" type="checkbox"> <a href="C++/Memory.md#new-%E5%92%8C-malloc-%E7%9A%84%E5%AF%B9%E6%AF%94">new 和 malloc 区别</a></li><li><input disabled="" type="checkbox"> <a href="C++/Basic.md#%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2">四种类型转换方式</a></li><li><input disabled="" type="checkbox"> <a href="C++/Compiler.md#%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB">include 头文件包含</a></li><li><input disabled="" type="checkbox"> <a href="C++/Function#%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0">按值传递和按引用传递区别</a></li><li><input disabled="" type="checkbox"> <a href="C++/Basic.md#if-%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5">If 判断规范写法</a></li><li><input disabled="" type="checkbox"> <a href="C++/Basic.md#%E9%80%97%E5%8F%B7%E8%BF%90%E7%AE%97%E7%AC%A6">逗号运算符</a></li><li><input disabled="" type="checkbox"> <a href="C++/11_SmartPoint.md">智能指针</a></li></ul><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><ul><li><input disabled="" type="checkbox"> <a href="Python/Class.md#%E6%96%B0%E5%BC%8F%E7%B1%BB%E6%97%A7%E5%BC%8F%E7%B1%BB">新式类、旧式类</a></li><li><input disabled="" type="checkbox"> <a href="Python/Class.md#%E6%96%B9%E6%B3%95">静态方法，类方法，成员方法</a></li><li><input disabled="" type="checkbox"> <a href="Python/Class.md#%E6%95%B0%E6%8D%AE%E5%B1%9E%E6%80%A7">数据属性</a></li><li><input disabled="" type="checkbox"> <a href="Python/Class.md#%E7%B1%BB%E7%9A%84%E7%BB%A7%E6%89%BF">类继承机制</a></li><li><input disabled="" type="checkbox"> <a href="Python/Class.md#%E7%89%B9%E6%AE%8A%E7%9A%84%E7%B1%BB%E6%96%B9%E6%B3%95">特殊的类方法, __call__等</a></li><li><input disabled="" type="checkbox"> <a href="Python/Function.md#%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0">函数参数如何传递</a></li><li><input disabled="" type="checkbox"> <a href="Python/Function.md#lambda-%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0%E6%8D%95%E8%8E%B7%E5%80%BC">lambda 运行时绑定</a></li><li><input disabled="" type="checkbox"> <a href="Python/Function.md#%E9%BB%98%E8%AE%A4%E5%8F%82%E6%95%B0%E5%80%BC">函数默认参数</a></li><li><input disabled="" type="checkbox"> <a href="Python/Function.md#%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0">常用的内置函数</a></li><li><input disabled="" type="checkbox"> <a href="Python/Function.md#sorted">sort 函数用法</a></li><li><input disabled="" type="checkbox"> <a href="Python/Function.md#%E5%87%BD%E6%95%B0%E9%97%AD%E5%8C%85">函数闭包</a></li><li><input disabled="" type="checkbox"> 提高速度的语言上的技巧</li><li><input disabled="" type="checkbox"> 自省机制：type(), dir()…</li><li><input disabled="" type="checkbox"> 列表推导，字典推导式</li><li><input disabled="" type="checkbox"> 函数参数传递</li><li><input disabled="" type="checkbox"> Python 浅拷贝、深拷贝</li><li><input disabled="" type="checkbox"> Python 协程</li><li><input disabled="" type="checkbox"> Python 闭包</li><li><input disabled="" type="checkbox"> Python 实现单例模式</li><li><input disabled="" type="checkbox"> Python 垃圾回收机制</li><li><input disabled="" type="checkbox"> Python 元类</li><li><input disabled="" type="checkbox"> Python 单下划线和双下划线</li><li><input disabled="" type="checkbox"> 新式类和旧式类</li><li><input disabled="" type="checkbox"> yield 关键字</li><li><input disabled="" type="checkbox"> <a href="Python/py2Vs3.md">Python 3 的变换</a></li></ul><h1 id="如何贡献"><a href="#如何贡献" class="headerlink" title="如何贡献"></a>如何贡献</h1><p>大家可以在Issue 里列出一些感兴趣的问题，或者去认领 Issue，提交 Pull Request.</p><p>主要贡献者列表：</p><ul><li><a href="https://github.com/chenyuze">@chenyuze</a></li><li><a href="https://github.com/eligao">@eligao</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/01/25/post-JavaScript%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2023/01/25/post-JavaScript%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<hr><p>title:JavaScript入门教程<br>data: 2023-01-25<br>updataed: 2023-01-28<br>type: “tags”<br>​—</p><p>文章目录<br>01.JavaScript概述<br>02.HTML中嵌入JavaScript<br>03.JavaScript标识符和变量<br>04.函数的定义和使用<br>05.JS的数据类型<br>1.number数据类型<br>2.boolean数据类型<br>3.String数据类型<br>4.Object数据类型<br>06.在JS当中怎么定义类？怎么new对象？<br>07.null,undefined,NaN的区别</p><p>01.JavaScript概述<br>1.什么是JavaScript?<br>JavaScript是运行在浏览器上的脚本语言。简称JS。<br>JavaScript是网景公司（NetScape)的 布兰登·艾奇 开发的，最初叫做LiveScript。LiveScript的出现让浏览器更加生动，使得页面更具有交互性。<br>JavaScript（简称“JS”） 是一种具有函数优先的轻量级，解释型或即时编译型的编程语言。虽然它是作为开发Web页面的脚本语言而出名的，但是它也被用到了很多非浏览器环境中，JavaScript 基于原型编程、多范式的动态脚本语言，并且支持面向对象、命令式和声明式（如函数式编程）风格。</p><p>JavaScript在1995年由Netscape公司的Brendan Eich，在网景导航者浏览器上首次设计实现而成。因为Netscape与Sun合作，Netscape管理层希望它外观看起来像Java，因此取名为JavaScript。但实际上它的语法风格与Self及Scheme较为接近。</p><p>JavaScript和java没有任何关系，只是语法类似。JavaScript运行在浏览器中，代码由浏览器解释后执行。而Java运行在JVM中。</p><p>JavaScript的“目标程序”以普通文本形式保存，这种语言都叫做”脚本语言“。</p><p>Java的目标程序已.class形式存在，不能使用文本编辑器打开，不是脚本语言。</p><p>1998年网景公司由“美国在线”公司收购。</p><p>王景公司最著名的就是“领航者浏览器”：Navigator浏览器。<br>LiveScript的出现，最初的时候是为Navigator浏览器量身定制一门语言，不支持其他浏览器。</p><p>微软一看不行，研发了只支持IE浏览器的脚本语言。JScript。<br>在两者语言共存的时代，程序员需要写两套程序。这时一个叫做ECMA组织（欧洲计算机协会）根据JavaScript制定了ECMA-262标准，叫做ECMA-Script.</p><p>JavaScript是一种属于网络的脚本语言,已经被广泛用于Web应用开发,常用来为网页添加各式各样的动态功能,为用户提供更流畅美观的浏览效果。通常JavaScript脚本是通过嵌入在HTML中来实现自身的功能的。<br>2.区分JSP和JS<br>JSP：JavaServer Pages（隶属Java）<br>JS: JavaScript.</p><p>02.HTML中嵌入JavaScript<br>1.HTML嵌入JavaScript的第一种方式<br>JS是一门事件驱动型的编程语言，依靠时间去驱动，然后执行对应的程序。在JS中有很多事件，其中一个事件叫做：鼠标单击，单词：click。并且任何事件都会对应一个事件句柄叫做：onclick。【注意：事件和事件句柄的区别是：事件句柄是在事件单词前添加一个on】，而事件是以HTML标签的属性存在的。</p><p>οnclick&#x3D;”js代码“，执行原理是什么？<br>页面打开的时候，js代码并不会执行，只是把这段代码注册到按钮的click事件上了。等这个按钮发生click之后，注册在onclick后面的js代码会被浏览器自动调用。</p><p>*怎么使用JS代码弹出消息框。<br>在JS中有一个内置对象叫做window,全部小写，可以直接拿来使用，window代表的是浏览器对象。</p><p>*window对象有一个函数叫做：alert，用法是：window.alert(“消息”）;这样就可以弹窗了。</p><p>*JS的字符串可以使用双引号，也可以使用单引号。</p><p>*JS的一条语句结束之后可以使用分号“；”,也可以不使用。</p><p>举例：</p><!DOCTYPE html><html lang="en"><head>    <meta charset="UTF-8">    <title>HTML中嵌入JavaScript的第一种方式</title></head><body>    <!--点击按钮弹出消息框-->    <input type="button" value="Hello" onclick="window.alert('Hello JavaScript!')"/>    <input type="button" value="Hello" onclick="window.alert('Hello XingKong!')"/>    <input type="button" value="Hello" onclick="window.alert ('Hello MengYangChen');                                                alert('Hello MengYang')                                                alert('Hello Meng')"/></body></html><p>2.HTML嵌入JavaScript的第二种方式<br>采用脚本块的方式：<br>暴露在脚本块中的程序，在页面打开的时候执行，并且遵守自上而下的顺序依次逐行执行。（不需要事件）</p><p>JavaScript脚本块可以出现在任何位置，并且可以出现多次。<br>aler函数会阻塞整个HTML页面的加载。</p><p>注释语法跟Java一样。</p><!DOCTYPE html><html lang="en"><head>    <meta charset="UTF-8">    <title>HTML嵌入JavaScript的第二种方式</title></head><body>    <input type="button" value="我是一个。。"/>    <script type="text/javascript">        window.alert("hello world!");    </script>    <input type="button" value="我是一个按钮对象"/></body></html><p>3.HTML嵌入JavaScript的第三种方式（推荐）<br>引入外部的js文件。</p><p>引入js脚本文件的语句：<br>同一个脚本文件可以引入多次。<br>脚本文件直接写语句就好了。</p><script type="text/javascript" src="路径和文件名“></script><p>1<br>结束的&lt; &#x2F;script&gt;标签必须有，不能用反斜杠取代，引入文件时，其中间的代码不会执行。</p><!DOCTYPE html><html lang="en"><head>    <meta charset="UTF-8">    <title>HTML中嵌入JavaScript的第三种方式</title></head><body><script type="text/javascript" src="file/JS1.js"></script></body></html><p>03.JavaScript标识符和变量<br>1.标识符的命名规则跟Java相同。</p><p>2.变量：<br>声明变量：<br>var 变量名；</p><p>赋值：<br>变量名&#x3D;值<br>javascript是一种弱类型语言，没有编译阶段，一个变量可以随意给其赋值。什么类型的都可以。</p><p>变量没有手动赋值时，默认赋值为：undefined。<br>未声明变量使用会报错。</p><p>2.局部变量和全局变量<br>类似C语言：</p><p>全局变量在函数体之外声明。浏览器关闭的时候才会销毁。</p><p>局部变量:在函数体内部声明。在函数体执行完后才销毁。</p><p>3.当一个变量声明的时候没有使用var关键字，那么不管这个变量是在哪里声明的，都是全局变量。</p><p>04.函数的定义和使用<br>1.JS中的函数怎么定义呢?<br>语法格式：<br>第一种方式：<br>function 函数名（形式参数列表）{<br>函数体；<br>}<br>第二种方式：<br>函数名&#x3D;function(形式参数列表）{<br>函数体；<br>}</p><p>JS中的函数不需要指定返回值类型，返回什么类型的数据都没问题。</p><p>函数的形参也不需要声明。<br>如：</p><script>function sum (a,b){alert(a+b);}//或者sum=function(a,b){alert(a+b);}</script><p>在调用函数的时候，如果没有传参数的值，或则传了一部分，剩下未传的参数默认赋值undefined。</p><p>NaN是一个具体的值，该值表示不是数字。</p><p>如果实参的数量大于形式参数的个数，默认只取前面两个数据。即没有数量限制（弱类型语言）。因此可以看出，JS不需要重载。<br>2.JS的函数不能重载。<br>如果出现同名函数，后面定义的函数会把前面定义的函数覆盖。<br>因此JS函数不能重名。分辨函数就是根据函数名来分辨。</p><p>05.JS的数据类型<br>1.JS数据类型有:原始类型，引用类型。<br>原始类型：Undefined,Number,String,Boolean,Null<br>引用类型:Object以及子类。</p><p>2.在ES6规范后，又基于以上6种类型添加了一种新的类型：Symbol。</p><p>3.JS中有一个运算符叫做typeof,这个运算符可以在程序的运行阶段动态地获取变量的数据类型。</p><p>typeof运算符的语法格式：<br>typeof 变量名</p><p>typeof运算符的运算结果时以下6个字符串(全小写）结果之一：<br>“undefined”<br>“number”<br>“string”<br>“boolean”<br>“object”<br>“function”</p><p>var d&#x3D;null;<br>alert(typeof d);&#x2F;&#x2F;“object”<br>比较字符串是否相等用双等号。</p><p>4.Undefined数据类型只有一个值。这个值就是undefined，当一个变量没有手动赋值，系统默认赋值为undefined，当然也可以手动赋值为undefined。</p><p>1.number数据类型<br>如：NaN，表示Not a Number不是一个数字，但是属于Number类型。</p><p>Infinity，表示无穷大。</p><p>0,-1,123,…小数，复数，无穷大都是属于number类型。</p><p>除数为0时，结果为无穷大。</p><p>函数isNaN（数据）：结果为true表示不是一个数字。<br>parseInt()函数：可以将字符串自动转换成数字。保留Int<br>parseFloat()函数：将字符串转换成数字。<br>Math.Ceil()函数：向上取整。2.1会变为3。</p><p>2.boolean数据类型<br>在boolean类型中有一个Boolean（）函数，会将非boolean类型，转换成boolean类型。<br>当某个地方一定是boolean类型时，会自动转换成boolean类型。例如if后面的括号。<br>NaN,0,””,null,undefined会自动转换成false.</p><p>3.String数据类型<br>1.在JS当中字符串可以使用单引号和双引号。<br>2.在JS当中，怎么创建字符串对象<br>第一种：var s&#x3D;“sag”;（小String，属于String类型）<br>第二种：var a2&#x3D; new String(“ab”);（大String，属于Object类型）<br>Sting是一个内置的类，可以直接使用。</p><p>3.无论是小String还是大Sting字符串的长度相同。其中又一个length属性求长度(x.length)</p><p>常用函数：<br>indexof: 获取指定字符串在当前字符串中第一次出现的索引<br>lastIndexof<br>replace<br>substr<br>substring<br>toLowerCase<br>toUpperCase<br>spilt 拆分字符串</p><p>例如:alert(“fasdf”.indexof(“sdf”));</p><p>replace只替换最前面一个子字符串<br>如果想全部替换需要使用正则表达式。</p><p>substr和substring的区别。<br>substr(startIndex length)</p><p>substring(startIndex endIndex)左闭右开。</p><p>4.Object数据类型<br>1.首先Object类型是所有类型的超类，自定义的任何类型，默认继承Object。</p><p>2.Object的prototype属性<br>作用：给类动态地扩展属性和函数。</p><p>3.Object类的函数：</p><p>toString()<br>valueof()<br>toLocalString()</p><p>4.在JS中定义的类默认继承Object的属性和函数。</p><p>06.在JS当中怎么定义类？怎么new对象？<br>1.定义类的语法：<br>第一种方式：<br>function 类名（形参）{<br>}<br>第二种方式：<br>类名 function (形参）{<br>}</p><p>小朋友你是不是有很多问号？这不是函数的定义方式么？</p><p>注意：用了new就是把他当作类看，如果没有new则是把它当作普通的函数看待。</p><p>创建对象的语法：<br>new 构造函数名（实参）；&#x2F;&#x2F;构造函数和类名一致</p><p>2.JS中类的定义，同时又是一个构造函数的定义</p><p>在JS中类的定义和构造函数的定义是放在一起来完成的。</p><p>如：<br>function User(a,b,c){<br>this.sno &#x3D;a;<br>this.sname&#x3D;b;<br>this.sage&#x3D;c;<br>}<br>&#x2F;&#x2F;a,b,c是形参，属于局部变量<br>&#x2F;&#x2F;声明属性（this 表示当前对象）<br>&#x2F;&#x2F;User类中有三个属性：sno&#x2F;sname&#x2F;sage</p><p>3.创建对象：<br>var u1 &#x3D; new User(111,“lisi”,30)</p><p>4.访问对象的属性：<br>alert(u1.sno)<br>alert(u1.sname)<br>alert(u1.sage)</p><p>或者用另一种语法访问属性：<br>alert(u1[“sno”]);<br>alert(u1[“sage”]);</p><p>定义类的另一种语法：<br>Emp &#x3D; function (ename ,sal)<br>this.ename &#x3D;ename;<br>this.sal&#x3D;sal;<br>}</p><p>5.在类中如何定义函数:</p><p>Product &#x3D; function(pno,pname,price){<br>&#x2F;&#x2F;属性<br>this.pno&#x3D;pno;<br>this.pname&#x3D;pname;<br>this.price&#x3D;price;<br>&#x2F;&#x2F;函数<br>this.getPrice &#x3D;function(){<br> return this.price<br>}<br>&#x2F;&#x2F;new对象<br>var pro &#x3D; new Product(111,”西瓜”,4.0)<br>&#x2F;&#x2F;调用函数<br>var pri &#x3D; pro.getPrice();<br>alert(pri);&#x2F;&#x2F;4.0</p><p>6.通过prototype这个属性来动态扩展属性以及函数<br>&#x2F;&#x2F;给Product类扩展函数：<br>Product.prototype.getPname&#x3D;function(){<br>return this.pname;<br>}</p><p>&#x2F;&#x2F;给String类扩展函数<br>String.prototype.getPname&#x3D;function(){<br>alert(“Hello”);<br>}</p><p>7.JS与Java的对比：</p><p>07.null,undefined,NaN的区别<br>1.数据类型不一致</p><p>alert(typeof null);&#x2F;&#x2F;Object<br>alert(typeof NaN);&#x2F;&#x2F;number<br>alert(typeof undefined);&#x2F;&#x2F;undefined</p><p>2.null和undefined可以等同</p><p>alert(null&#x3D;NaN);&#x2F;&#x2F;false<br>alert(null&#x3D;undefined);&#x2F;&#x2F;true<br>alert(underfined&#x3D;NaN);false</p><p>在JS当中有两个比较特殊的运算符：</p><p>1.”&#x3D;&#x3D;” :等同运算符：只判断值是否相等（双等号）<br>2.”&#x3D; &#x3D; &#x3D;”：全等运算符：既判断值是否相等，又判断数据类型是否相等。（三等号）</p><p>alert(11 &#x3D;&#x3D; ture);&#x2F;&#x2F;true<br>alert(11&#x3D;&#x3D;&#x3D; ture);&#x2F;&#x2F;false</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章基于Dorprax搭建免费的v2ray</title>
      <link href="/2023/01/22/post-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%9F%BA%E4%BA%8EDorprax%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84v2ray/"/>
      <url>/2023/01/22/post-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%9F%BA%E4%BA%8EDorprax%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84v2ray/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇文章"><a href="#这是我的第一篇文章" class="headerlink" title="这是我的第一篇文章"></a>这是我的第一篇文章</h2><p>Doprax搭建免费的v2ray<br> 梅塔沃克  2023-01-13 PM  5704℃<br>Doprax<br>Doprax又是一款可以免费使用的容器类应用，相比于Replit，可以说是各有千秋，原因是Replit虽然速度挺快但是容易出现断开或者停止服务的情况；Doprax的免费用户可以实现永久在线，不过速度明显比repl要慢一些但却可以不限制流量，测试最高33M，youtube能跑1.3万，1080p不太卡。晚高峰速度470k，建议使用优选IP。</p><p>鉴于Doprax稳定的服务，还是有小伙伴愿意尝试的，搭建也非常简单，下面开始：<br>Doprax官网：<a href="https://www.doprax.com/r/proxy/">https://www.doprax.com/r/proxy/</a></p><p>搭建步骤<br>1、作者github： <a href="https://github.com/hiifeng/V2ray-for-Doprax%EF%BC%8C%E5%85%88%E7%82%B9%E4%B8%AAstar%E7%84%B6%E5%90%8Efork%E4%B8%80%E4%B8%8B%EF%BC%9B">https://github.com/hiifeng/V2ray-for-Doprax，先点个star然后fork一下；</a></p><p>2、按照作者提示，需要修改一下dockerfile中的UUID、VMESS_WSPATH、VLESS_WSPATH，UUID生成可用<a href="https://www.v2fly.org/awesome/tools.html">https://www.v2fly.org/awesome/tools.html</a> ，path随便写就行了；部署之后修改也OK！</p><p>3、Doprax创建一个新的app，名称随意，我使用site，然后在site的Main中，选择从github导入，我们选择这个分支，然后导入。<br>导入完成后，是这个样子的：</p><p>截屏2023-01-13 19.06.40.png</p><p>这个步骤也同样可以修改UUID、VMESS_WSPATH、VLESS_WSPATH，保存按钮比较难找哇；</p><p>4、接下来来到Deploy页面，点击启动,然后等待；我这里选择RAM: 256 MB CPU: 1 vCPU，速度稍慢了一些；完全启动后，我们会得到一个URL：<br>截屏2023-01-13 19.10.40.png</p><p>客户端设置方法<br>作者给出的设置参考图片：<br>截屏2023-01-13 19.18.06.png</p><p>我使用小火箭客户端的图片：<br>截屏2023-01-13 19.14.56.png</p><p>vless同理！</p><p>进阶教程<br>套cf cdn加速：<br>1、在app的设置页面，点击Edit domain，把域名解析到URL所在的IP，然后刷新验证，直到显示验证成功！<br>2、cf内开启小云朵。<br>3、在v2客户端当中，把地址和host都改成绑定的域名，然后测速，速度最高可提升10倍。当然了，这也要看网络情况；<br>我本地测速原来570kps，加速后6.7Mbps；<br>4、优选IP工具GitHub地址：<a href="https://github.com/XIU2/CloudflareSpeedTest/">https://github.com/XIU2/CloudflareSpeedTest/</a><br>cf的IP段：<a href="https://github.com/ip-scanner/cloudflare">https://github.com/ip-scanner/cloudflare</a></p><p>但是我发现一个问题，cf真的是用户太多了，连续测试了几个IP效果都不太好！就在刚刚，我又发现cf的小云朵开启以后，Doprax会检测到，庆幸的是，反代还可以用。</p><p>套aws cdn加速：<br>1、aws cdn套餐免费1T流量，所以自己的URL要注意保密，流量还是挺贵的！<br>2、在CloudFront创建cdn，等待地址生效；<br>3、在v2客户端当中，把地址和host都改成CloudFront分配的地址；<br>4、测试一下，效果也是一般般！<br>5、在<a href="https://d7uri8nf7uskq.cloudfront.net/tools/list-cloudfront-ips">https://d7uri8nf7uskq.cloudfront.net/tools/list-cloudfront-ips</a> 找一个非国内IP（或者是使用优选工具），修改客户端的地址（host伪装不修改，仍然使用CloudFront分配的地址），嘿！<br>6、fast测速120Mbps，8K也毫无压力呀！</p><p>问题是我白天测试的效果不敢再鼓吹了，录视频真翻车呀，晚高峰再测试然后更新视频吧。</p><p>参考资料：<a href="https://github.com/hiifeng/V2ray-for-Doprax">https://github.com/hiifeng/V2ray-for-Doprax</a></p><p>Doprax搭建v2的视频教程：<a href="https://www.youtube.com/watch?v=p76SC2GBT0s">https://www.youtube.com/watch?v=p76SC2GBT0s</a><br>对速度不满意吗？ 看看反代+优选IP教程 <a href="https://www.youtube.com/watch?v=4O5k5HVZB_o">https://www.youtube.com/watch?v=4O5k5HVZB_o</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光  */#universe{    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;  }  /* 一级菜单居中 */#nav .menus_items {  position: absolute !important;  width: fit-content !important;  left: 50% !important;  transform: translateX(-50%) !important;}/* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {  display: flex !important;}/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(2) .menus_item_child {  left: -125px;}@font-face {  /* 为载入的字体取名字(随意) */  font-family: 'YSHST';  /* 字体文件地址(相对或者绝对路径都可以) */  src: url(D://xk.PA.png);  /* 定义加粗样式(加粗多少) */  font-weight: normal;  /* 定义字体样式(斜体/非斜体) */  font-style: normal;  /* 定义显示样式 */  font-display: block;}/*#双边框居中修复*//* 翻页按钮居中 */#pagination {  width: 100%;  margin: auto;}/* 侧边栏个人信息卡片动态渐变色 */#aside-content > .card-widget.card-info {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@-moz-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}/* 黑夜模式适配 */[data-theme="dark"] #aside-content > .card-widget.card-info {  background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content > .card-widget.card-info > #card-info-btn {  background-color: #3eb8be;  border-radius: 8px;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<!-- GitCalendar容器 --><div id="gitZone"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>gallery</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>galleryGroup</title>
      <link href="/galleryGroup/index.html"/>
      <url>/galleryGroup/index.html</url>
      
        <content type="html"><![CDATA[<div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://source.fomal.cc/img/default_cover_61.webp' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">封面专区</div>  <p>本站用作文章封面的图片，不保证分辨率</p>  <a href='/box/Gallery/photo'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://source.fomal.cc/img/dm11.webp' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">背景专区</div>  <p>收藏的一些的背景与壁纸，分辨率很高</p>  <a href='/box/Gallery/wallpaper'></a>  </figcaption>  </figure>  </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById("universe"),o=!0,a="180,184,240",r="226,225,142",d="226,225,224",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute("width",n),s.setAttribute("height",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle="rgba("+a+","+this.opacity+")",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle="rgba("+d+","+this.opacity+")",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle="rgba("+d+","+(this.opacity-this.opacity/20*t)+")",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle="rgba("+r+","+this.opacity+")",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener("resize",f,!1),function(){h=s.getContext("2d");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};dark()]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/moive/index.html"/>
      <url>/moive/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
